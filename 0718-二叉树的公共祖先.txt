/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root == null){
            return null;
        }
        //◊Û±ﬂµ›πÈ’“pq   2.”“±ﬂ’“p q
        //≈–∂œ ◊Û”“ «∑ÒŒ™ø’
        if(root == p || root == q){
            return root;
        }
        TreeNode node1 = lowestCommonAncestor(root.left,p,q);
        TreeNode node2 = lowestCommonAncestor(root.right,p,q);
        if(node1 != null && node2 != null){
            return root;
        }
        if(node1 != null && node2 == null){
            return node1;
        }
        if(node1 == null && node2 != null){
            return node2;
        }
        return null;
    }
}