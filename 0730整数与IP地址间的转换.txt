题目描述
      原理：ip地址的每段可以看成是一个0-255的整数，把每段拆分成一个二进制形式组合起来，然后把这个二进制数转变成
一个长整数。
举例：一个ip地址为10.0.3.193
每段数字             相对应的二进制数
10                   00001010
0                    00000000
3                    00000011
193                  11000001
组合起来即为：00001010 00000000 00000011 11000001,转换为10进制数就是：167773121，即该IP地址转换后的数字就是它了。

的每段可以看成是一个0-255的整数，需要对IP地址进行校验
输入描述:
输入 
1 输入IP地址
2 输入10进制型的IP地址

输出描述:
输出
1 输出转换成10进制的IP地址
2 输出转换后的IP地址

示例1
输入
10.0.3.193
167969729
输出
167773121
10.3.3.193

import java.util.Scanner;

/**
 * Created with IntelliJ IDEA
 * Description:整数与ip地址间的转换
 * User:Light_Long
 * Date:2019-07-30
 * Time:22:17
 */
public class Main {
    public static String changeNumber(String str1) {
        int pop = Integer.parseInt(str1);
        StringBuilder str = new StringBuilder();
        for (int i = 0; i < 32; i++) {
            int pop1 = 0;
            pop1 = pop >> i & 1;
            str.append(pop1);
        }
        str.reverse();
        int flag = 7;
        int[] arr = new int[4];
        int count = 0;
        int count1 = 0;
        for (int i = 0; i < str.length(); i++) {
           int len = str.charAt(i) - '0';
           if(flag >= 0) {
               count += len * Math.pow(2,flag);
               flag--;
               if(i < str.length() - 1 && flag != -1) {
                   continue;
               }
           }
           arr[count1++] = count;
           count = 0;
           flag = 7;
        }
        StringBuilder len = new StringBuilder();
        for (int i = 0; i < 4; i++) {
            len.append(arr[i]);
            if(i < 3) {
                len.append(".");
            }  
        }
        return len.toString();
    }
    public static String changeString(String[] arr) {
        //String[] num = new String[arr.length];
        StringBuilder strsum = new StringBuilder();
        for (int i = 0; i < arr.length; i++) {
            StringBuilder serb = new StringBuilder();
            int count = 0;
            int pop = Integer.parseInt(arr[i]);
            while(count != 8) {
                int nums = pop >> count & 1;
                serb.append(nums);
                count++;
            }
            strsum.append(serb.reverse().toString());
        }
        int sums = 0;
        for (int i = strsum.length() - 1; i >= 0;i--) {
            int flag = strsum.charAt(i) - '0';
            sums += flag * Math.pow(2,31 - i);
        }
        String sums1 = String.valueOf(sums);
        return sums1;
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while(in.hasNextLine()) {
            String str1 = in.nextLine();
            String str2 = in.nextLine();
            String[] arr = str1.split("\\.");
            String pop1 = changeString(arr);
            String pop2 = changeNumber(str2);
            System.out.println(pop1);
            System.out.println(pop2);
        }
    }
}
