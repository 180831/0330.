给定一个按非递减顺序排序的整数数组 A，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。

 

示例 1：

输入：[-4,-1,0,3,10]
输出：[0,1,9,16,100]
示例 2：

输入：[-7,-3,2,3,11]
输出：[4,9,9,49,121]

class Solution {
    public int[] sortedSquares(int[] A) {
        for (int i = 0; i < A.length; i++) {
            if (A[i] >= 0) {
                break;
            }
            A[i] = -A[i];

            for (int j = i+1; j < A.length; j++) {
                if (A[j-1] < A[j]) {
                    break;
                }
                int temp = A[j];
                A[j] = A[j-1];
                A[j-1] = temp;
                i = -1;
            }
        }

        for (int k = 0; k < A.length; k++) {
            A[k] *= A[k];
        }

        return A;
    }
}