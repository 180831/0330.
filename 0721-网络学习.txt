网络原理：
Linux诞生于1991，全球第一大操作系统，
1、移动端，Android本质就是linux
2、服务端，90%都是linux
3、嵌入式领域，
Linux本质是一个操作系统的内核
内核负责：
1、对硬件设备的管理
2、对软件资源的管理
通过网络方式登陆到云服务器
借助一个远程终端工具（xshell）免费软件
远程登陆方式：ssh[ip]
图型界面更占用系统资源，通过网络操作更占用带宽
Linux的常用命令:
ls：罗列出当前目录中的文件和目录

Ls -l/ll（更常用） ：打印出更详细的信息
cd（）：进入某个目录/切换到某个目录

cd..：返回上层目录

.表示当前目录
..表示当前目录的上层目录
~表示当前用户的home目录
/表示根目录，所有目录的最上级。
d开头表示文件夹
-开头表示文件

Linux目录结构是一种树形结构，

pwd：查看当前目录的完整路径（绝对路径）
绝对路径：以/开头
相对路径：以./..开头的

touch：创建一个空文件
cat：查看文件内容

使用ctrl+l来清屏。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
less：查看文件内容，更详细，提供更丰富的支持     只能看，不能改    打开大文件特别快  懒加载

vim  :查看并修改文件
使用起来非常不方便的程序，但是又是一个非常nb的程序

区分模式：
Normal ：按下的都是快捷键，不是真的输入文本
Insert：才是真的输入模式 （i 进入   ，esc  推出）
Command;   wq 保存退出

mkdir： 创建一个目录

 rm  (remove)   删除文件
删除目录：rm  -r 表示递归删除
rm删除的内容是无法恢复的，一定要谨慎
mv：

111.cp （copy）	
cp -r 递归拷贝

12.创建用户
useadd
password 给用户创建密码

su 进入管机员模式	root
exit/ctrl + d 退户管理员模式

权限问题：
读、查看内容
写、修改内容
可执行、运行程序

对应的角色
a.文件的拥有者
b.文件拥有者的所有组
c.其他用户

-r	去掉读权限 
+r	加上读权限
chmod	修改权限
增加或者删除某个权限
并且可以针对某类角色执行
（对于root来说没有意义）

针对于运维工程是来说更重要 点

计算机网络理论
1.
应用层 和包含很多的协议
有一个协议叫做  自定制协议
（主动发起请求的一方 客户端
   被动响应的一方  服务器
客户端给服务器发送的信息格式
服务器返回给客户端的信息格式

1-请求（request和响应（response中包含的信息有哪些
2-请求数据和响应数据如何组织（具体按照啥格式来序列化
序列化-把对象变为字符串
反序列化-把字符串变为对象
序列化的常见方式
1.xml
2.json	优势：方便调试
  劣势：传输效率低
3.
3-http协议
打开网页靠http协议
https基于http  多了一个加密层
url	网址/链接
协议//域名/路径（指文件或者虚拟文件
路径表示 主机上的具体的资源（文件或者虚拟机文件

ip地址不太方便记忆和传播 用一些更好的记忆的字符串来表示
域名 浏览器在访问域名的时候会自动把域名转成ip地址

查询字符串(query_String） ？之后的东西  特定结构为键值对
uriencode 如果包含了一些特定 的字符，都需要进行转义 【%+16进制数字】
编码可解码

抓包工具	收费站（费德勒fiddler（计算机相关的软件，直接去官网直接下载

http请求
首行	
1.方法	GET/POST/PUT/DELETE
2.url		空格之前结束
3.版本号	http/1.1	2.0	3.0	
三个部分之间使用空格分隔
2.协议头header
很多行	若干个键值对保存（每个键值对占用一行 使用：分隔（键值对之间）
3.空行
表示header 在这里结束了
4.协议正文（body)
账号密码（键值对

响应
1.首行
[版本号] + [状态码] + [状态码解释]
2.Header: 协议头
仍然是一组键值对，请求的属性, 冒号分割的键值对;每组属性之间使用\n分隔;遇到空行表示Header部分结束

3.空行

4.Body:协议正文
 空行后面的内容都是Body. Body允许为空字符串. 如果Body存在, 则在Header中会有一个ContentLength属性来标识Body的长度; 如果服务器返回了一个html页面, 那么html页面内容就是在body中
（可以是一个html/css/JavaScript/....不同格式

servlet
1.常用的方法有哪些
GET	POST	PUT	DELEDTE	HEAD	OPTION
GET和POST的区别？
GET往往把自定制的数据放在query_string中
POST请求往往把自定制数据放在body中
常见的状态码？
200	OK 表示访问成功
302	Found表示重定向
303	See	Othe	也表示重定向‘
404	Not	Found 没找到
403	Forbiden	没权限
502	Bad Gateway	服务器挂了
504	Gateway	Timeout	服务器响应超时


2xx表示访问成功
3xx表示重定向
4xx表示客户端出错
5xx表示服务器出错

常见的head
Content-Type	描述了body的数据格式类型
Content-Length	描述了body的数据长度 单位为字节 8个bit位为一个字节
Host		描述了访问主机的域名
Referer	从哪个地方跳转来的，这个节点的上一个节点。
Cookie	字符串，浏览器的本地存储能力之一
 session id身份标识的信息（服务器端维护的一个数据结构，记录了用户的身份信息，
session id 就是session对象的唯一身份标识	session id自动保存，再次访问时就会待	    着这个session id 从而使服务器来知道当前请求是那个用户发来的

服务器使用hase表来维护session id 
cookie 是按照Host 和POST来划分的


