package www;

import java.util.Arrays;

/**
 * Created with IntelliJ IDEA
 * Description:
 * User:Light_Long
 * Date:2019-08-11
 * Time:19:09
 */
public class Test {

    //÷±Ω”≈≈–Ú
    public static void insert(int[] arr) {
        for (int i = 1; i < arr.length; i++) {
            int temp = arr[i];
            int j = 0;
            for (j = i - 1; j >= 0; j--) {
                if(arr[j] > temp) {
                    arr[j + 1] = arr[j];
                }else {
                    break;
                }
            }
            arr[j + 1] = temp;
        }
    }


    //œ£∂˚≈≈–Ú

    public static void shellSort(int[] arr) {
        int[] str = {3,1};
        for (int i = 0; i < str.length; i++) {
            shell(arr,str[i]);
        }
    }

    public static void shell(int[] arr,int pop) {

        for (int i = pop; i < arr.length; i++) {
            int temp = arr[i];
            int j = 0;
            for (j = i - pop; j >= 0; j -= pop) {

                if(arr[j] > temp) {
                    arr[j + pop] = arr[j];
                }else {
                    break;
                }
            }
            arr[j + pop] = temp;
        }
    }

    public static void quickSort(int[] arr) {

        quick(arr,0,arr.length - 1);
    }

    public static void quick(int[] arr,int start,int end) {

        int par = quicktion(arr,start,end);

        if(par > start + 1) {
            quick(arr,start,par - 1);
        }
        if(par < end - 1) {
            quick(arr,par + 1,end);
        }
    }

    public static int quicktion(int[] arr,int low,int high) {
        int temp = arr[low];
        while(low < high) {
            while(low < high && arr[high] >= temp) {
                high--;
            }
            if(low == high) {
                break;
            }else {
                arr[low] = arr[high];
                low++;
            }
            while(low < high && arr[low] <= temp) {
                low++;
            }
            if(low == high) {
                break;
            }else {
                arr[high] = arr[low];
                high--;
            }
        }
        arr[low] = temp;
        return low;
    }

    public static void margeSort(int[] arr,int start,int end) {
        if(start == end) {
            return;
        }
        int mid = (start + end) / 2;
        margeSort(arr,start, mid);
        margeSort(arr,mid + 1,end);

        marge(arr,start,mid,end);
    }
    public static void marge(int[] arr,int start,int mid,int end) {
        int i = start;
        int p = mid + 1;
        int[] str = new int[arr.length];
        int index = start;
        while(start <= mid && p <= end) {
            if(arr[start] <= arr[p]) {
                str[index++] = arr[start++];
            }else {
                str[index++] = arr[p++];
            }
        }
        while(start <= mid) {
            str[index++] = arr[start++];
        }
        while(p <= end) {
            str[index++] = arr[p++];
        }
        while(i <= end) {
            arr[i] = str[i];
            i++;
        }
    }


    public static void selectSort(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            int temp = arr[i];
            for (int j = i + 1; j < arr.length; j++) {
                if(arr[j] < temp) {
                    arr[i] = arr[j];
                    arr[j] = temp;
                    temp = arr[i];
                }
            }
        }
    }

    public static void headSort(int[] arr) {
        for (int i = (arr.length - 1 - 1) / 2; i >= 0 ; i--) {
            adjust(arr,i,arr.length - 1);
        }

        for (int i = 0; i < arr.length - 1; i++) {
            int temp = arr[0];
            arr[0] = arr[arr.length - 1 - i];
            arr[arr.length - 1 - i] = temp;
            adjust(arr,0,arr.length - 1 - i - 1);
        }
    }

    public static void adjust(int[] arr,int start,int end) {
        int temp = arr[start];
        for (int i = 2 * start + 1; i <= end; i = 2 * i + 1) {
            if(i < end && arr[i] < arr[i + 1]) {
                i++;
            }
            if(arr[i] > temp) {
                arr[start] = arr[i];
                start = i;
            }else {
                break;
            }
        }
        arr[start] = temp;
    }

    public static void main(String[] args) {
        int[] arr = {10,6,7,1,3,9,4,2};
        //insert(arr);
        //shellSort(arr);
        //quickSort(arr);
        //margeSort(arr,0,arr.length - 1);
        //selectSort(arr);
        headSort(arr);
        System.out.println(Arrays.toString(arr));
    }

}
